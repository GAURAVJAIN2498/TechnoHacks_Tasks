ask 8: Configuration Management with Ansible
Problem Statement:
Automate configuration management using Ansible to manage multiple servers.
Step 1:
# sudo yum install -y ansible
# ansible --version

Step 2: Configure Inventory File
## /etc/ansible/hosts or create a new inventory file (inventory.ini)
[webservers]
server1 ansible_host=65.1.147.122 ansible_user=ec2-user ansible_ssh_private_key_file=/root/newkey.pem ansible_connection=ssh 
server2 ansible_host=13.233.103.90 ansible_user=ec2-user ansible_ssh_private_key_file=/root/newkey.pem ansible_connection=ssh ansible_ssh_common_args='-o StrictHostKeyChecking=no'

Test SSH Connectivity:

#ansible all -i inventory.ini -m ping

Step 3: Write an Ansible Playbook
Create a playbook file (nginx_setup.yml):

{ - name: Install and start NGINX
  hosts: webservers
  become: yes
  tasks:
    - name: Install NGINX
      package:
        name: nginx
        state: present

    - name: Start NGINX service
      service:
        name: nginx
        state: started
        enabled: yes }

Step 4: Run the Ansible Playbook

# ansible-playbook -i inventory.ini nginx_setup.yml

Step 5: Verify NGINX Installation
Check if NGINX is running on all servers:

# ansible webservers -i inventory.ini -m shell -a "systemctl status nginx"

Open a browser and test:
Visit http://public_ip and http://public_ip to see the NGINX welcome page.

